/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <opencv2/opencv.hpp>

using namespace cv;
using namespace std;
/* Header for class com_example_romio_opencvtest_NativeCpp */

#ifndef _Included_com_example_romio_opencvtest_NativeCpp
#define _Included_com_example_romio_opencvtest_NativeCpp
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_romio_opencvtest_NativeCpp
 * Method:    convert2Grey
 * Signature: (JJ)I
 */

struct Cerc {
    Point2f center;
    float radius;
};

struct SimpleShapes {
    Mat img_src;
    Mat img_dst;
    Mat img_bw;
    vector<RotatedRect> rectangles;
    vector<vector<Point> > triangles;
    vector<Cerc> cercles;
};

JNIEXPORT void JNICALL Java_com_example_romio_opencvtest_NativeCpp_convert2Grey
  (JNIEnv *, jclass, jlong, jlong);

JNIEXPORT void JNICALL Java_com_example_romio_opencvtest_NativeCpp_detectRed
  (JNIEnv *, jclass, jlong, jlong);

JNIEXPORT void JNICALL Java_com_example_romio_opencvtest_NativeCpp_detectBlue
  (JNIEnv *, jclass, jlong, jlong);

JNIEXPORT void JNICALL Java_com_example_romio_opencvtest_NativeCpp_detectYellow
  (JNIEnv *, jclass, jlong, jlong);

JNIEXPORT void JNICALL Java_com_example_romio_opencvtest_NativeCpp_detectContour
  (JNIEnv *, jclass, jlong, jlong);

double angleCos(Point , Point , Point );

void setLabel(Mat& , const string , vector<Point>& );
#ifdef __cplusplus
}
#endif
#endif
